Расскажи подробно как опытный программист 1с что делает этот код "Перем СкладЯр1 Экспорт;
Перем СкладЯр2 Экспорт;
Перем СкладЯр3 Экспорт;
// Нестеренко Начало
Перем СкладЯр4 Экспорт;
// Нестеренко Конец
Перем СкладРыб Экспорт;
Перем СкладИв1 Экспорт;
Перем СкладИв2 Экспорт;
Перем СкладИв3 Экспорт;
Перем СкладИв4 Экспорт;
Перем ПодразделениеЯр1 Экспорт;
Перем ПодразделениеЯр2 Экспорт;
Перем ПодразделениеЯр3 Экспорт;
// Нестеренко Начало
Перем ПодразделениеЯр4 Экспорт;
// Нестеренко Конец
Перем ПодразделениеРыб Экспорт;
Перем ПодразделениеИв1 Экспорт;
Перем ПодразделениеИв2 Экспорт;
Перем ПодразделениеИв3 Экспорт;
Перем ПодразделениеИв4 Экспорт;

Процедура Инициализировать(Документ,ИмяТабличнойЧасти,ТабличноеПоле)Экспорт
	
	Если Документ.Проведен Тогда
		Сообщить("Заполнять можно только не проведенный документ");
		Возврат;
	КонецЕсли;	
	
	Форма = ПолучитьФорму("Форма");
	
	СкладДока = Документ.Склад;
	НеПодходитСклад = Истина;
	Если СкладДока = СкладЯр1 Или Не ЗначениеЗаполнено(СкладДока) Тогда
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.Ярославль1.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ОстатокЯр1.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ПродажиЯр1.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ЗаказЯр1.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.МинОстатокЯр1.Видимость = Истина;
		НеПодходитСклад = Ложь;
	КонецЕсли;	
	Если СкладДока = СкладЯр2 Или Не ЗначениеЗаполнено(СкладДока) Тогда
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.Ярославль2.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ОстатокЯр2.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ПродажиЯр2.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ЗаказЯр2.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.МинОстатокЯр2.Видимость = Истина;
		НеПодходитСклад = Ложь;
	КонецЕсли;	
	Если СкладДока = СкладЯр3 Или Не ЗначениеЗаполнено(СкладДока) Тогда
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.Ярославль3.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ОстатокЯр3.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ПродажиЯр3.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ЗаказЯр3.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.МинОстатокЯр3.Видимость = Истина;
		НеПодходитСклад = Ложь;
	КонецЕсли;	 
	 // Нестеренко Начало
    	Если СкладДока = СкладЯр4 Или Не ЗначениеЗаполнено(СкладДока) Тогда
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.Ярославль4.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ОстатокЯр4.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ПродажиЯр4.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ЗаказЯр4.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.МинОстатокЯр4.Видимость = Истина;
		НеПодходитСклад = Ложь;
	КонецЕсли;	
      // Нестеренко Конец
     	Если СкладДока = СкладРыб Или Не ЗначениеЗаполнено(СкладДока) Тогда
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.Рыбинск.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ОстатокРыб.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ПродажиРыб.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ЗаказРыб.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.МинОстатокРыб.Видимость = Истина;
		НеПодходитСклад = Ложь;
	КонецЕсли;	
	Если СкладДока = СкладИв1 Или Не ЗначениеЗаполнено(СкладДока) Тогда
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.Иваново1.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ОстатокИв1.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ПродажиИв1.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ЗаказИв1.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.МинОстатокИв1.Видимость = Истина;
		НеПодходитСклад = Ложь;
	КонецЕсли;	
	Если СкладДока = СкладИв2 Или Не ЗначениеЗаполнено(СкладДока) Тогда
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.Иваново2.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ОстатокИв2.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ПродажиИв2.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ЗаказИв2.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.МинОстатокИв2.Видимость = Истина;
		НеПодходитСклад = Ложь;
	КонецЕсли;	
	Если СкладДока = СкладИв3 Или Не ЗначениеЗаполнено(СкладДока) Тогда
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.Иваново3.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ОстатокИв3.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ПродажиИв3.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ЗаказИв3.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.МинОстатокИв3.Видимость = Истина;
		НеПодходитСклад = Ложь;
	КонецЕсли;	
	Если СкладДока = СкладИв4 Или Не ЗначениеЗаполнено(СкладДока) Тогда
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.Иваново4.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ОстатокИв4.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ПродажиИв4.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.ЗаказИв4.Видимость = Истина;
		Форма.ЭлементыФормы.ТаблицаЗаказов.Колонки.МинОстатокИв4.Видимость = Истина;
		НеПодходитСклад = Ложь;
	КонецЕсли;	
	
	Если НеПодходитСклад Тогда
		Сообщить("Формирование заказа по выбранному складу не поддерживается. Обратитесь к администратору!");
		Возврат;
	КонецЕсли;
	
	Форма.Поставщик = Документ.Контрагент;
	ВыполнятьЗаполнение = Форма.ОткрытьМодально();
	
	Форма = неопределено;
	
	Если ВыполнятьЗаполнение <> "Заполнить" Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Стр Из ТаблицаЗаказов Цикл
		
		НоваяСтрока = Документ.Товары.Добавить();
		Номен = Стр.Номенклатура;
		НоваяСтрока.Номенклатура = Номен;
		НоваяСтрока.ЕдиницаИзмерения = Номен.ЕдиницаХраненияОстатков;
		НоваяСтрока.Коэффициент = 1;
		НоваяСтрока.Количество = Стр.ЗаказИв1+Стр.ЗаказИв2+Стр.ЗаказИв3+Стр.ЗаказИв4+Стр.ЗаказРыб+стр.ЗаказЯр1+стр.ЗаказЯр2+стр.ЗаказЯр3
		// Нестеренко Начало
       	 +стр.ЗаказЯр4
		// Нестеренко Конец
		;
		НоваяСтрока.Цена = Стр.Цена;
		НоваяСтрока.Сумма = НоваяСтрока.Цена * НоваяСтрока.Количество;
		ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(НоваяСтрока,Документ,"Заказ");
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НоваяСтрока,Документ);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НоваяСтрока,Документ);	
	КонецЦикла;	
	
КонецПроцедуры	

Функция СформироватьДанныеЗаказа() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Номенклатура.Ссылка
	|ПОМЕСТИТЬ ВсяНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В ИЕРАРХИИ(&ПапкаНоменклатуры)
	|	И НЕ Номенклатура.ПометкаУдаления
	|	И Номенклатура.ОсновнойПоставщик В(&Поставщики)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыНаСкладахОстатки.Склад = &СкладЯр1
	|				ТОГДА ТоварыНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОстатокЯр1,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыНаСкладахОстатки.Склад = &СкладЯр2
	|				ТОГДА ТоварыНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОстатокЯр2,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыНаСкладахОстатки.Склад = &СкладЯр3
	|				ТОГДА ТоварыНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОстатокЯр3,
 	// Нестеренко Начало
   	|	СУММА(ВЫБОР
	|			КОГДА ТоварыНаСкладахОстатки.Склад = &СкладЯр4
	|				ТОГДА ТоварыНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОстатокЯр4,
	// Нестеренко Конец
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыНаСкладахОстатки.Склад = &СкладРыб
	|				ТОГДА ТоварыНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОстатокРыб,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыНаСкладахОстатки.Склад = &СкладИв1
	|				ТОГДА ТоварыНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОстатокИв1,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыНаСкладахОстатки.Склад = &СкладИв2
	|				ТОГДА ТоварыНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОстатокИв2,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыНаСкладахОстатки.Склад = &СкладИв3
	|				ТОГДА ТоварыНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОстатокИв3,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыНаСкладахОстатки.Склад = &СкладИв4
	|				ТОГДА ТоварыНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОстатокИв4
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	ВсяНоменклатура КАК ВсяНоменклатура,
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Качество = ЗНАЧЕНИЕ(Справочник.Качество.Новый)
	// Нестеренко Начало
    |				И Склад В (&СкладЯр1, &СкладЯр2, &СкладЯр3, &СкладЯр4, &СкладРыб, &СкладИв1, &СкладИв2, &СкладИв3, &СкладИв4)) КАК ТоварыНаСкладахОстатки
    // Нестеренко Конец
   	|ГДЕ
	|	ТоварыНаСкладахОстатки.Номенклатура В (ВсяНоменклатура.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыВРезервеНаСкладахОстатки.Номенклатура,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыВРезервеНаСкладахОстатки.Склад = &СкладЯр1
	|				ТОГДА ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РезервЯр1,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыВРезервеНаСкладахОстатки.Склад = &СкладЯр2
	|				ТОГДА ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РезервЯр2,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыВРезервеНаСкладахОстатки.Склад = &СкладЯр3
	|				ТОГДА ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РезервЯр3,
// Нестеренко Начало
     	|	СУММА(ВЫБОР
	|			КОГДА ТоварыВРезервеНаСкладахОстатки.Склад = &СкладЯр4
	|				ТОГДА ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РезервЯр4,
// Нестеренко Конец
    	|	СУММА(ВЫБОР
	|			КОГДА ТоварыВРезервеНаСкладахОстатки.Склад = &СкладРыб
	|				ТОГДА ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РезервРыб,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыВРезервеНаСкладахОстатки.Склад = &СкладИв1
	|				ТОГДА ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РезервИв1,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыВРезервеНаСкладахОстатки.Склад = &СкладИв2
	|				ТОГДА ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РезервИв2,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыВРезервеНаСкладахОстатки.Склад = &СкладИв3
	|				ТОГДА ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РезервИв3,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыВРезервеНаСкладахОстатки.Склад = &СкладИв4
	|				ТОГДА ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РезервИв4
	|ПОМЕСТИТЬ Резервы
	|ИЗ
	|	ВсяНоменклатура КАК ВсяНоменклатура,
	// Нестеренко Начало
   	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(, Склад В (&СкладЯр1, &СкладЯр2, &СкладЯр3, &СкладЯр4, &СкладРыб, &СкладИв1, &СкладИв2, &СкладИв3, &СкладИв4)) КАК ТоварыВРезервеНаСкладахОстатки
 // Нестеренко Конец
    	|ГДЕ
	|	ТоварыВРезервеНаСкладахОстатки.Номенклатура В (ВсяНоменклатура.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыВРезервеНаСкладахОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗначенияТочкиЗаказаСрезПоследних.Номенклатура,
	|	СУММА(ВЫБОР
	|			КОГДА ЗначенияТочкиЗаказаСрезПоследних.Склад = &СкладЯр1
	|				ТОГДА ЗначенияТочкиЗаказаСрезПоследних.ЗначениеТочкиЗаказа
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МинОстатокЯр1,
	|	СУММА(ВЫБОР
	|			КОГДА ЗначенияТочкиЗаказаСрезПоследних.Склад = &СкладЯр2
	|				ТОГДА ЗначенияТочкиЗаказаСрезПоследних.ЗначениеТочкиЗаказа
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МинОстатокЯр2,
	|	СУММА(ВЫБОР
	|			КОГДА ЗначенияТочкиЗаказаСрезПоследних.Склад = &СкладЯр3
	|				ТОГДА ЗначенияТочкиЗаказаСрезПоследних.ЗначениеТочкиЗаказа
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МинОстатокЯр3,
	// Нестеренко Начало
    	|	СУММА(ВЫБОР
	|			КОГДА ЗначенияТочкиЗаказаСрезПоследних.Склад = &СкладЯр4
	|				ТОГДА ЗначенияТочкиЗаказаСрезПоследних.ЗначениеТочкиЗаказа
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МинОстатокЯр4,
	// Нестеренко Конец
     	|	СУММА(ВЫБОР
	|			КОГДА ЗначенияТочкиЗаказаСрезПоследних.Склад = &СкладРыб
	|				ТОГДА ЗначенияТочкиЗаказаСрезПоследних.ЗначениеТочкиЗаказа
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МинОстатокРыб,
	|	СУММА(ВЫБОР
	|			КОГДА ЗначенияТочкиЗаказаСрезПоследних.Склад = &СкладИв1
	|				ТОГДА ЗначенияТочкиЗаказаСрезПоследних.ЗначениеТочкиЗаказа
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МинОстатокИв1,
	|	СУММА(ВЫБОР
	|			КОГДА ЗначенияТочкиЗаказаСрезПоследних.Склад = &СкладИв2
	|				ТОГДА ЗначенияТочкиЗаказаСрезПоследних.ЗначениеТочкиЗаказа
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МинОстатокИв2,
	|	СУММА(ВЫБОР
	|			КОГДА ЗначенияТочкиЗаказаСрезПоследних.Склад = &СкладИв3
	|				ТОГДА ЗначенияТочкиЗаказаСрезПоследних.ЗначениеТочкиЗаказа
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МинОстатокИв3,
	|	СУММА(ВЫБОР
	|			КОГДА ЗначенияТочкиЗаказаСрезПоследних.Склад = &СкладИв4
	|				ТОГДА ЗначенияТочкиЗаказаСрезПоследних.ЗначениеТочкиЗаказа
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК МинОстатокИв4
	|ПОМЕСТИТЬ МинимальныеОстатки
	|ИЗ
	|	ВсяНоменклатура КАК ВсяНоменклатура, 
	// Нестеренко Начало
    	|	РегистрСведений.ЗначенияТочкиЗаказа.СрезПоследних(, Склад В (&СкладЯр1, &СкладЯр2, &СкладЯр3, &СкладЯр4, &СкладРыб, &СкладИв1, &СкладИв2, &СкладИв3, &СкладИв4)) КАК ЗначенияТочкиЗаказаСрезПоследних
	// Нестеренко Конец
    	|ГДЕ
	|	ЗначенияТочкиЗаказаСрезПоследних.Номенклатура В (ВсяНоменклатура.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗначенияТочкиЗаказаСрезПоследних.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА ПродажиОбороты.ДокументПродажи.Подразделение = &ПодразделениеЯр1
	|					ИЛИ ПродажиОбороты.Подразделение = &ПодразделениеЯр1
	|				ТОГДА ПродажиОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПродажиЯр1,
	|	СУММА(ВЫБОР
	|			КОГДА ПродажиОбороты.ДокументПродажи.Подразделение = &ПодразделениеЯр2
	|					ИЛИ ПродажиОбороты.Подразделение = &ПодразделениеЯр2
	|				ТОГДА ПродажиОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПродажиЯр2,
	|	СУММА(ВЫБОР
	|			КОГДА ПродажиОбороты.ДокументПродажи.Подразделение = &ПодразделениеЯр3
	|					ИЛИ ПродажиОбороты.Подразделение = &ПодразделениеЯр3
	|				ТОГДА ПродажиОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПродажиЯр3, 
    	// Нестеренко Начало
     	|	СУММА(ВЫБОР
	|			КОГДА ПродажиОбороты.ДокументПродажи.Подразделение = &ПодразделениеЯр4
	|					ИЛИ ПродажиОбороты.Подразделение = &ПодразделениеЯр4
	|				ТОГДА ПродажиОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПродажиЯр4,
	// Нестеренко Конец
      |	СУММА(ВЫБОР
	|			КОГДА ПродажиОбороты.ДокументПродажи.Подразделение = &ПодразделениеРыб
	|					ИЛИ ПродажиОбороты.Подразделение = &ПодразделениеРыб
	|				ТОГДА ПродажиОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПродажиРыб,
	|	СУММА(ВЫБОР
	|			КОГДА ПродажиОбороты.ДокументПродажи.Подразделение = &ПодразделениеИв1
	|					ИЛИ ПродажиОбороты.Подразделение = &ПодразделениеИв1
	|				ТОГДА ПродажиОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПродажиИв1,
	|	СУММА(ВЫБОР
	|			КОГДА ПродажиОбороты.ДокументПродажи.Подразделение = &ПодразделениеИв2
	|					ИЛИ ПродажиОбороты.Подразделение = &ПодразделениеИв2
	|				ТОГДА ПродажиОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПродажиИв2,
	|	СУММА(ВЫБОР
	|			КОГДА ПродажиОбороты.ДокументПродажи.Подразделение = &ПодразделениеИв3
	|					ИЛИ ПродажиОбороты.Подразделение = &ПодразделениеИв3
	|				ТОГДА ПродажиОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПродажиИв3,
	|	СУММА(ВЫБОР
	|			КОГДА ПродажиОбороты.ДокументПродажи.Подразделение = &ПодразделениеИв4
	|					ИЛИ ПродажиОбороты.Подразделение = &ПодразделениеИв4
	|				ТОГДА ПродажиОбороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПродажиИв4,
	|	ПродажиОбороты.Номенклатура
	|ПОМЕСТИТЬ Продажи
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			&НачалоПериодаАнализа,
	|			&КонецПериодаАнализа,
	|			Период, 
// Нестеренко Начало
     	|			ДокументПродажи.Подразделение В (&ПодразделениеЯр1, &ПодразделениеЯр2, &ПодразделениеЯр3, &ПодразделениеЯр4, &ПодразделениеРыб, &ПодразделениеИв1, &ПодразделениеИв2, &ПодразделениеИв3, &ПодразделениеИв4)
	|				ИЛИ Подразделение В (&ПодразделениеЯр1, &ПодразделениеЯр2, &ПодразделениеЯр3, &ПодразделениеЯр4, &ПодразделениеРыб, &ПодразделениеИв1, &ПодразделениеИв2, &ПодразделениеИв3, &ПодразделениеИв4)) КАК ПродажиОбороты,
// Нестеренко Конец
     	|	ВсяНоменклатура КАК ВсяНоменклатура
	|ГДЕ
	|	ПродажиОбороты.Номенклатура В (ВсяНоменклатура.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыКонтрагентовСрезПоследних.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатурыКонтрагентовСрезПоследних.Цена КАК Цена,
	|	ЦеныНоменклатурыКонтрагентовСрезПоследних.Период
	|ПОМЕСТИТЬ ВсеЦены
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатурыКонтрагентов.СрезПоследних(
	|			,
	|			Номенклатура В ИЕРАРХИИ (&ПапкаНоменклатуры)
	|				И НЕ Номенклатура.ПометкаУдаления
	|				И Номенклатура.ОсновнойПоставщик В (&Поставщики)) КАК ЦеныНоменклатурыКонтрагентовСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеЦены.Номенклатура,
	|	МАКСИМУМ(ВсеЦены.Период) КАК Период
	|ПОМЕСТИТЬ ВремяПоследнихЦен
	|ИЗ
	|	ВсеЦены КАК ВсеЦены
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеЦены.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеЦены.Номенклатура,
	|	МАКСИМУМ(ВсеЦены.Цена) КАК Цена
	|ПОМЕСТИТЬ Цены
	|ИЗ
	|	ВсеЦены КАК ВсеЦены
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремяПоследнихЦен КАК ВремяПоследнихЦен
	|		ПО ВсеЦены.Номенклатура = ВремяПоследнихЦен.Номенклатура
	|			И ВсеЦены.Период = ВремяПоследнихЦен.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеЦены.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсяНоменклатура.Ссылка КАК Номенклатура,
	|	ЕСТЬNULL(Остатки.ОстатокЯр1, 0) КАК ОстатокЯр1,
	|	ЕСТЬNULL(Остатки.ОстатокЯр2, 0) КАК ОстатокЯр2,
	|	ЕСТЬNULL(Остатки.ОстатокЯр3, 0) КАК ОстатокЯр3,
	// Нестеренко Начало
    	|	ЕСТЬNULL(Остатки.ОстатокЯр4, 0) КАК ОстатокЯр4,
	// Нестеренко Конец
    	|	ЕСТЬNULL(Остатки.ОстатокРыб, 0) КАК ОстатокРыб,
	|	ЕСТЬNULL(Остатки.ОстатокИв1, 0) КАК ОстатокИв1,
	|	ЕСТЬNULL(Остатки.ОстатокИв2, 0) КАК ОстатокИв2,
	|	ЕСТЬNULL(Остатки.ОстатокИв3, 0) КАК ОстатокИв3,
	|	ЕСТЬNULL(Остатки.ОстатокИв4, 0) КАК ОстатокИв4,
	|	ЕСТЬNULL(Резервы.РезервЯр1, 0) КАК РезервЯр1,
	|	ЕСТЬNULL(Резервы.РезервЯр2, 0) КАК РезервЯр2,
	|	ЕСТЬNULL(Резервы.РезервЯр3, 0) КАК РезервЯр3,
	// Нестеренко Начало
    |	ЕСТЬNULL(Резервы.РезервЯр4, 0) КАК РезервЯр4,
	// Нестеренко Конец
   	|	ЕСТЬNULL(Резервы.РезервРыб, 0) КАК РезервРыб,
	|	ЕСТЬNULL(Резервы.РезервИв1, 0) КАК РезервИв1,
	|	ЕСТЬNULL(Резервы.РезервИв2, 0) КАК РезервИв2,
	|	ЕСТЬNULL(Резервы.РезервИв3, 0) КАК РезервИв3,
	|	ЕСТЬNULL(Резервы.РезервИв4, 0) КАК РезервИв4,
	|	ЕСТЬNULL(Продажи.ПродажиЯр1, 0) КАК ПродажиЯр1,
	|	ЕСТЬNULL(Продажи.ПродажиЯр2, 0) КАК ПродажиЯр2,
	|	ЕСТЬNULL(Продажи.ПродажиЯр3, 0) КАК ПродажиЯр3,
	// Нестеренко Начало
    	|	ЕСТЬNULL(Продажи.ПродажиЯр4, 0) КАК ПродажиЯр4,
	// Нестеренко Конец
    	|	ЕСТЬNULL(Продажи.ПродажиРыб, 0) КАК ПродажиРыб,
	|	ЕСТЬNULL(Продажи.ПродажиИв1, 0) КАК ПродажиИв1,
	|	ЕСТЬNULL(Продажи.ПродажиИв2, 0) КАК ПродажиИв2,
	|	ЕСТЬNULL(Продажи.ПродажиИв3, 0) КАК ПродажиИв3,
	|	ЕСТЬNULL(Продажи.ПродажиИв4, 0) КАК ПродажиИв4,
	|	ЕСТЬNULL(Цены.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(МинимальныеОстатки.МинОстатокЯр1, 0) КАК МинОстатокЯр1,
	|	ЕСТЬNULL(МинимальныеОстатки.МинОстатокЯр2, 0) КАК МинОстатокЯр2,
	|	ЕСТЬNULL(МинимальныеОстатки.МинОстатокЯр3, 0) КАК МинОстатокЯр3, 
	// Нестеренко Начало
    	|	ЕСТЬNULL(МинимальныеОстатки.МинОстатокЯр4, 0) КАК МинОстатокЯр4, 
	// Нестеренко Конец
    	|	ЕСТЬNULL(МинимальныеОстатки.МинОстатокРыб, 0) КАК МинОстатокРыб,
	|	ЕСТЬNULL(МинимальныеОстатки.МинОстатокИв1, 0) КАК МинОстатокИв1,
	|	ЕСТЬNULL(МинимальныеОстатки.МинОстатокИв2, 0) КАК МинОстатокИв2,
	|	ЕСТЬNULL(МинимальныеОстатки.МинОстатокИв3, 0) КАК МинОстатокИв3,
	|	ЕСТЬNULL(МинимальныеОстатки.МинОстатокИв4, 0) КАК МинОстатокИв4,
	|	ВЫБОР
	|		КОГДА &ПоМинимальнымОстаткам
	|				И ЕСТЬNULL(МинимальныеОстатки.МинОстатокЯр1, 0) >= ЕСТЬNULL(Остатки.ОстатокЯр1, 0)
	|			ТОГДА ЕСТЬNULL(МинимальныеОстатки.МинОстатокЯр1, 0) - ЕСТЬNULL(Остатки.ОстатокЯр1, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗаказЯр1,
	|	ВЫБОР
	|		КОГДА &ПоМинимальнымОстаткам
	|				И ЕСТЬNULL(МинимальныеОстатки.МинОстатокЯр2, 0) >= ЕСТЬNULL(Остатки.ОстатокЯр2, 0)
	|			ТОГДА ЕСТЬNULL(МинимальныеОстатки.МинОстатокЯр2, 0) - ЕСТЬNULL(Остатки.ОстатокЯр2, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗаказЯр2,
	|	ВЫБОР
	|		КОГДА &ПоМинимальнымОстаткам
	|				И ЕСТЬNULL(МинимальныеОстатки.МинОстатокЯр3, 0) >= ЕСТЬNULL(Остатки.ОстатокЯр3, 0)
	|			ТОГДА ЕСТЬNULL(МинимальныеОстатки.МинОстатокЯр3, 0) - ЕСТЬNULL(Остатки.ОстатокЯр3, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗаказЯр3,
	// Нестеренко Начало
    	|	ВЫБОР
	|		КОГДА &ПоМинимальнымОстаткам
	|				И ЕСТЬNULL(МинимальныеОстатки.МинОстатокЯр4, 0) >= ЕСТЬNULL(Остатки.ОстатокЯр4, 0)
	|			ТОГДА ЕСТЬNULL(МинимальныеОстатки.МинОстатокЯр4, 0) - ЕСТЬNULL(Остатки.ОстатокЯр4, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗаказЯр4,
    // Нестеренко Конец
   	|	ВЫБОР
	|		КОГДА &ПоМинимальнымОстаткам
	|				И ЕСТЬNULL(МинимальныеОстатки.МинОстатокРыб, 0) >= ЕСТЬNULL(Остатки.ОстатокРыб, 0)
	|			ТОГДА ЕСТЬNULL(МинимальныеОстатки.МинОстатокРыб, 0) - ЕСТЬNULL(Остатки.ОстатокРыб, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗаказРыб,
	|	ВЫБОР
	|		КОГДА &ПоМинимальнымОстаткам
	|				И ЕСТЬNULL(МинимальныеОстатки.МинОстатокИв1, 0) >= ЕСТЬNULL(Остатки.ОстатокИв1, 0)
	|			ТОГДА ЕСТЬNULL(МинимальныеОстатки.МинОстатокИв1, 0) - ЕСТЬNULL(Остатки.ОстатокИв1, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗаказИв1,
	|	ВЫБОР
	|		КОГДА &ПоМинимальнымОстаткам
	|				И ЕСТЬNULL(МинимальныеОстатки.МинОстатокИв2, 0) >= ЕСТЬNULL(Остатки.ОстатокИв2, 0)
	|			ТОГДА ЕСТЬNULL(МинимальныеОстатки.МинОстатокИв2, 0) - ЕСТЬNULL(Остатки.ОстатокИв2, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗаказИв2,
	|	ВЫБОР
	|		КОГДА &ПоМинимальнымОстаткам
	|				И ЕСТЬNULL(МинимальныеОстатки.МинОстатокИв3, 0) >= ЕСТЬNULL(Остатки.ОстатокИв3, 0)
	|			ТОГДА ЕСТЬNULL(МинимальныеОстатки.МинОстатокИв3, 0) - ЕСТЬNULL(Остатки.ОстатокИв3, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗаказИв3,
	|	ВЫБОР
	|		КОГДА &ПоМинимальнымОстаткам
	|				И ЕСТЬNULL(МинимальныеОстатки.МинОстатокИв4, 0) >= ЕСТЬNULL(Остатки.ОстатокИв4, 0)
	|			ТОГДА ЕСТЬNULL(МинимальныеОстатки.МинОстатокИв4, 0) - ЕСТЬNULL(Остатки.ОстатокИв4, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗаказИв4
	|ИЗ
	|	ВсяНоменклатура КАК ВсяНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Продажи КАК Продажи
	|		ПО ВсяНоменклатура.Ссылка = Продажи.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
	|		ПО ВсяНоменклатура.Ссылка = Цены.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ВсяНоменклатура.Ссылка = Остатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Резервы КАК Резервы
	|		ПО ВсяНоменклатура.Ссылка = Резервы.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ МинимальныеОстатки КАК МинимальныеОстатки
	|		ПО ВсяНоменклатура.Ссылка = МинимальныеОстатки.Номенклатура";
	
	Запрос.УстановитьПараметр("Поставщики", ФильтрПоставщики.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ПапкаНоменклатуры", ФильтрГруппыНоменклатуры.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("СкладИв1", СкладИв1);
	Запрос.УстановитьПараметр("СкладИв2", СкладИв2);
	Запрос.УстановитьПараметр("СкладИв3", СкладИв3);
	Запрос.УстановитьПараметр("СкладИв4", СкладИв4);
	Запрос.УстановитьПараметр("СкладРыб", СкладРыб);
	Запрос.УстановитьПараметр("СкладЯр1", СкладЯр1);
	Запрос.УстановитьПараметр("СкладЯр2", СкладЯр2);
	Запрос.УстановитьПараметр("СкладЯр3", СкладЯр3);
	// Нестеренко Начало
    	Запрос.УстановитьПараметр("СкладЯр4", СкладЯр4);
    	// Нестеренко Конец
    	Запрос.УстановитьПараметр("ПодразделениеИв1", ПодразделениеИв1);
	Запрос.УстановитьПараметр("ПодразделениеИв2", ПодразделениеИв2);
	Запрос.УстановитьПараметр("ПодразделениеИв3", ПодразделениеИв3);
	Запрос.УстановитьПараметр("ПодразделениеИв4", ПодразделениеИв4);
	Запрос.УстановитьПараметр("ПодразделениеРыб", ПодразделениеРыб);
	Запрос.УстановитьПараметр("ПодразделениеЯр1", ПодразделениеЯр1);
	Запрос.УстановитьПараметр("ПодразделениеЯр2", ПодразделениеЯр2);
	Запрос.УстановитьПараметр("ПодразделениеЯр3", ПодразделениеЯр3);
	// Нестеренко Начало
    	Запрос.УстановитьПараметр("ПодразделениеЯр4", ПодразделениеЯр4);
	// Нестеренко Конец
	Запрос.УстановитьПараметр("НачалоПериодаАнализа", ПериодАнализа.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериодаАнализа", ПериодАнализа.ДатаОкончания);
	Запрос.УстановитьПараметр("ПоМинимальнымОстаткам", ПоМинимальнымОстаткам);
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьДанныеЗаказа()

спрСклады = Справочники.Склады;	
ОсновнаяОрганизация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
                      |	Организации.Ссылка
                      |ИЗ
                      |	Справочник.Организации КАК Организации");
КоличествоОрганизаций = Запрос.Выполнить().Выгрузить().Количество();
Если КоличествоОрганизаций > 0 Тогда
	ВыбранаОрганизация = Справочники.Организации.ПолучитьФормуВыбора("ФормаВыбора").ОткрытьМодально();
	Если ЗначениеЗаполнено(ВыбранаОрганизация) Тогда
		ОсновнаяОрганизация = ВыбранаОрганизация;
	КонецЕсли;
КонецЕсли;

Если Найти(ОсновнаяОрганизация.Наименование, "Авторесурс") > 0 Тогда
	СкладИв1 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ИВ1 опт");
	СкладИв2 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ИВ2 опт");
	СкладИв3 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ИВ3 опт");
	СкладИв4 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ИВ4 опт");
	СкладРыб = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ РЫБ опт");
	СкладЯр1 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ЯР1 опт");
	СкладЯр2 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ЯР2 опт");
	СкладЯр3 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ЯР3 опт");
// Нестеренко Начало
    	СкладЯр4 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ЯР4 опт");
// Нестеренко Конец
Иначе
	СкладИв1 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ Ив1 самообсл.");
	СкладИв2 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ИВ2 самообсл.");
	СкладИв3 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ИВ3 "+?(Вопрос("Использовать склад ИВ3 СО?", РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да, "самообсл.","опт"));
	СкладИв4 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ИВ4 самообсл.");
	СкладРыб = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ РЫБ самообсл.");
	СкладЯр1 = Справочники.Склады.НайтиПоНаименованию(?(Вопрос("Использовать склад ЯР1 СО?", РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да, "Основной склад ТЦ ЯР1 самообсл.","Музыка ЯР1"));
	СкладЯр2 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ЯР2 самообсл.");
	СкладЯр3 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ЯР3 самообсл.");
// Нестеренко Начало
    	СкладЯр4 = Справочники.Склады.НайтиПоНаименованию("Основной склад ТЦ ЯР4 самообсл.");
// Нестеренко Конец
КонецЕсли;
ПодразделениеИв1 = СкладИв1.Подразделение;
ПодразделениеИв2 = СкладИв2.Подразделение;
ПодразделениеИв3 = СкладИв3.Подразделение;
ПодразделениеИв4 = СкладИв4.Подразделение;
ПодразделениеРыб = СкладРыб.Подразделение;
ПодразделениеЯр1 = СкладЯр1.Подразделение;
ПодразделениеЯр2 = СкладЯр2.Подразделение;
ПодразделениеЯр3 = СкладЯр3.Подразделение;
// Нестеренко Начало
ПодразделениеЯр4 = СкладЯр4.Подразделение;
// Нестеренко Конец



"